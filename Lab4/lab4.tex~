\input template.tex
\begin{document}
\selectlanguage{russian}
\maketitle 3 {ПРОГРАММИРОВАНИЕ С ИСПОЛЬЗОВАНИЕМ МАССИВОВ. ОБРАБОТКА ИСКЛЮЧИТЕЛЬНЫХ СИТУАЦИЙ.}
\setcounter{page}{2}
\normalfont
\ssec{Цель работы}
Цель работы заключается в том, чтобы изучить свойства компонента TStringGrid и написать программу с использованием массивов.

\ 
\ssec{Задание на работу}
Задана  матрица  размером  NxM.  Определить  k  –  количество  особых
элементов  матрицы,  считая  элемент  особым,  если  он  больше  суммы  остальных 
элементов своего столбца. 

\clearpage
\ssec{Теоретическая справка}
{\hbadness=10000
\loop{}\ifnum\thepage<5{\hrule\hfill\\}\repeat
\newcounter{lc}\setcounter{lc}{29}
\loop{}\ifnum\value{lc}>0{\addtocounter{lc}{-1}\hrule\hfill\\}\repeat
}
\ssec{Схема алгоритма}
На рисунке \ref{alg:a} представлена схема общего алгоритма расчета количества ``особых чисел'' в массиве, т.е. таких,
которые больше суммы остальных элементов столбца.
\pic{LAB1.png}{Схема общего алгоритма   расчета количества ``особых чисел''}{alg:a}{H}
На рисунке \ref{alg:b} представлена схема алгоритма ввода данных для  расчета количества ``особых чисел''.
\pic{LAB2.png}{Схема алгоритма ввода данных}{alg:b}{H}
На рисунке \ref{alg:c} представлена схема алгоритма расчета  количества ``особых чисел''.
\pic{LAB3.png}{Схема алгоритма   расчета количества ``особых чисел''}{alg:c}{H}
На рисунке \ref{alg:d} представлена схема алгоритма вывода  количества ``особых чисел'' на экран.
\pic{LAB4.png}{Схема алгоритма вывода результата}{alg:d}{H}

%\vfill
\clearpage
\ssec{Инструкция пользователю}
Программа позволяет посчитать количество ``особых'' чисел в заданном массиве. Число считается таковым, если оно больше суммы остальных элементов своего столбца.

Для работы заполните таблицу, в которой строки соответствуют строкам массива. После заполнении таблицы нажмите кнопку  ``Посчитать''.   Если в данных были допущены ошибки, программа сообщит об этом во всплывающем окне.

Если данные введены правильно, то то программа выведет количество ``особых'' чисел в правом нижнем углу окна.
\ 
\ssec{Инструкция программиста}
В программе объявлен тип DDArray=Array of array of Double - динамический двумерный массив.
При разработке программы построение интерполяционного многочлена Ньютона с разделенными разностями были написаны следующие процедуры и функции:
%\suppressfloats[p]
\newcommand{\ftab}[1]{
 представлены в таблице \ref{#1}
}
\elist{
\item Процедура btnRunClick - основная процедура программы расчета кол-ва особых значений.

procedure TfrmMain.btnRunClick(Sender: TObject);

Параметры процедуры \ftab{btnRunClick:1}:
\tabl{Параметры основной процедуры программы}
{Sender&TObject&объект-возбудитель события \\ \hline
}{btnRunClick:1}{H}

Локальные переменные \ftab{btnRunClick:2}:
\tabl{Локальные переменные основной процедуры программы}{
\tabln{a &DDArray& массив для поиска особых элементов}
\tabln{k &integer& кол-во особых чисел}
}{btnRunClick:2}{H}

\item Функция Input - вводит данные для поиска количества особых чисел матрицы.

Возвращает True, если операция прошла успешно, иначе возвращает False.

function TfrmMain.Input(var a:DDArray):boolean;

Параметры  функции \ftab{input:1}:
\tabl{Параметры  функции  ввода данных}{
\tabln{a &DDarray& массив для поиска особых элементов}
}{input:1}{H}

Локальные переменные  функции \ftab{input:2}:
\tabl{Локальные переменные  функции ввода данных}{
\tabln{i,j &integer& переменные-счетчики для доступа к элементам массива,}
\tabln{n,m &integer& кол-во строк и столбцов массива}
\tabln{errors &string& список информации о возникших ошибках I/O.}
}{input:2}{H}

\item Функция GetSpec для расчета количества ``особых чисел'' в массиве, т.е. таких,
которые больше суммы остальных элементов столбца.

Возвращает количество ``особых'' чисел.

function GetSpec(const a:DDArray):Integer;

Параметры функции \ftab{getspec:1}:
\tabl{Параметры функции  расчета количества ``особых чисел''}{
\tabln{a &DDArray& массив для поиска особых элементов}
}{getspec:1}{H}

Локальные переменные  функции \ftab{getspec:2}:
\tabl{Локальные переменные  функции  расчета количества ``особых чисел''}{
\tabln{i,j &integer& переменные-счетчики для доступа к элементам массива,}
\tabln{n,m &integer& кол-во строк и столбцов массива}
\tabln{k &integer& кол-во особых чисел в массиве}
\tabln{s &Double& сумма элементов текущей строки}
}{getspec:2}{H}

\item Процедура Output для вывода количества особых чисел на форму.

procedure TfrmMain.Output(const k:Integer);

Параметры процедуры \ftab{output:1}:
\tabl{Параметры процедуры  вывода количества особых чисел}{
\tabln{k &integer& кол-во особых чисел}
}{output:1}{H}
}
\clearpage
\ssec{Текст программы}
Ниже представлен текст программы на языке Delphi 7, реализующей расчет количества ``особых чисел'' в массиве, т.е. таких,
которые больше суммы остальных элементов столбца.
\prog{Delphi}{UnitMain.pas}
\clearpage

\ 
\ssec{Тестовый пример}
Ниже на рисунке \ref{scr:1} представлен пример работы программы c правильными исходными данными.
\pic{SCR1.png}{Пример работы программы  c правильными исходными данными}{scr:1}{H}
На рисунке \ref{scr:2} представлен пример работы программи с неправильными исходными данными.
\pic{SCR2.png}{Пример работы программы  c правильными исходными данными}{scr:2}{H}
\ 
\ssec{Вывод}
В этой лабораторной работе я изучил реализацию массивов в Delphi,и методы обработки исключительных ситуаций.
Массивы позволяют обрабатывать большие объёмы данных, кроме того, динамические массивы позволяют просто и удобно масштабироваться при изменении объема данных. Концепция исключений и обработка исключений предоставляют высокоуровневый интерфейс для предотвращения ошибок времени выполнения.
\end{document}
